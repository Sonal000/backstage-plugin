{"version":3,"file":"useDqlQuery.esm.js","sources":["../../src/hooks/useDqlQuery.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2024 Dynatrace LLC\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { dqlQueryApiRef } from '../api';\r\nimport { useApi, identityApiRef } from '@backstage/core-plugin-api';\r\nimport useAsync from 'react-use/lib/useAsync';\r\n\r\nexport const useDqlQuery = (\r\n  namespace: string,\r\n  queryName: string,\r\n  entityRef: string,\r\n) => {\r\n  const dqlQueryApi = useApi(dqlQueryApiRef);\r\n  const identityApi = useApi(identityApiRef);\r\n\r\n  const { value, loading, error } = useAsync(async () => {\r\n    const { token } = await identityApi.getCredentials();\r\n    if (!token) {\r\n      throw new Error(`Failed to get identity token`);\r\n    }\r\n\r\n    return await dqlQueryApi.getData(namespace, queryName, entityRef, token);\r\n  }, [dqlQueryApi, namespace, queryName, entityRef]);\r\n\r\n  return {\r\n    error,\r\n    loading,\r\n    value,\r\n  };\r\n};\r\n"],"names":[],"mappings":";;;;AAmBO,MAAM,WAAc,GAAA,CACzB,SACA,EAAA,SAAA,EACA,SACG,KAAA;AACH,EAAM,MAAA,WAAA,GAAc,OAAO,cAAc,CAAA,CAAA;AACzC,EAAM,MAAA,WAAA,GAAc,OAAO,cAAc,CAAA,CAAA;AAEzC,EAAA,MAAM,EAAE,KAAO,EAAA,OAAA,EAAS,KAAM,EAAA,GAAI,SAAS,YAAY;AACrD,IAAA,MAAM,EAAE,KAAA,EAAU,GAAA,MAAM,YAAY,cAAe,EAAA,CAAA;AACnD,IAAA,IAAI,CAAC,KAAO,EAAA;AACV,MAAM,MAAA,IAAI,MAAM,CAA8B,4BAAA,CAAA,CAAA,CAAA;AAAA,KAChD;AAEA,IAAA,OAAO,MAAM,WAAY,CAAA,OAAA,CAAQ,SAAW,EAAA,SAAA,EAAW,WAAW,KAAK,CAAA,CAAA;AAAA,KACtE,CAAC,WAAA,EAAa,SAAW,EAAA,SAAA,EAAW,SAAS,CAAC,CAAA,CAAA;AAEjD,EAAO,OAAA;AAAA,IACL,KAAA;AAAA,IACA,OAAA;AAAA,IACA,KAAA;AAAA,GACF,CAAA;AACF;;;;"}