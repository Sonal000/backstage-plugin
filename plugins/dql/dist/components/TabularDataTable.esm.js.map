{"version":3,"file":"TabularDataTable.esm.js","sources":["../../src/components/TabularDataTable.tsx"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2024 Dynatrace LLC\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { ObjectModal } from './ObjectModal';\r\nimport { Table, TableColumn } from '@backstage/core-components';\r\nimport {\r\n  TableTypes,\r\n  TabularData,\r\n  TabularDataRow,\r\n} from '@dynatrace/backstage-plugin-dql-common';\r\nimport { Link } from '@material-ui/core';\r\nimport _ from 'lodash';\r\nimport React, { ReactNode, useMemo } from 'react';\r\n\r\ntype TabularDataTableProps = {\r\n  title: string;\r\n  data: TabularData;\r\n  pageSize?: number;\r\n};\r\n\r\nconst cellRenderer = (field: string) => {\r\n  return (data: TabularDataRow): ReactNode => {\r\n    const cellData = data[field];\r\n\r\n    if (cellData === undefined) {\r\n      // key does not exist on this row\r\n      return '';\r\n    }\r\n\r\n    if (typeof cellData === 'string') {\r\n      return cellData;\r\n    }\r\n\r\n    if (cellData.type === TableTypes.OBJECT) {\r\n      return <ObjectModal data={cellData.content} property={field} />;\r\n    }\r\n\r\n    if (cellData.type === TableTypes.LINK) {\r\n      return (\r\n        <Link href={cellData.url} target=\"_blank\" rel=\"noopener\">\r\n          {cellData.text}\r\n        </Link>\r\n      );\r\n    }\r\n\r\n    return JSON.stringify(cellData);\r\n  };\r\n};\r\n\r\nexport const TabularDataTable = ({\r\n  title,\r\n  data,\r\n  pageSize = 10,\r\n}: TabularDataTableProps) => {\r\n  const columns = useMemo<TableColumn[]>(() => {\r\n    const keys = data.reduce((acc, row) => {\r\n      for (const key in row) {\r\n        acc.add(key);\r\n      }\r\n      return acc;\r\n    }, new Set<string>());\r\n\r\n    return Array.from(keys).map(key => ({\r\n      title: key,\r\n      field: key,\r\n      render: cellRenderer(key),\r\n    }));\r\n  }, [data]);\r\n\r\n  return (\r\n    <Table\r\n      title={title}\r\n      options={{ search: true, paging: true, pageSize: pageSize }}\r\n      columns={columns}\r\n      data={data}\r\n    />\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;;AAgCA,MAAM,YAAA,GAAe,CAAC,KAAkB,KAAA;AACtC,EAAA,OAAO,CAAC,IAAoC,KAAA;AAC1C,IAAM,MAAA,QAAA,GAAW,KAAK,KAAK,CAAA,CAAA;AAE3B,IAAA,IAAI,aAAa,KAAW,CAAA,EAAA;AAE1B,MAAO,OAAA,EAAA,CAAA;AAAA,KACT;AAEA,IAAI,IAAA,OAAO,aAAa,QAAU,EAAA;AAChC,MAAO,OAAA,QAAA,CAAA;AAAA,KACT;AAEA,IAAI,IAAA,QAAA,CAAS,IAAS,KAAA,UAAA,CAAW,MAAQ,EAAA;AACvC,MAAA,2CAAQ,WAAY,EAAA,EAAA,IAAA,EAAM,QAAS,CAAA,OAAA,EAAS,UAAU,KAAO,EAAA,CAAA,CAAA;AAAA,KAC/D;AAEA,IAAI,IAAA,QAAA,CAAS,IAAS,KAAA,UAAA,CAAW,IAAM,EAAA;AACrC,MACE,uBAAA,KAAA,CAAA,aAAA,CAAC,IAAK,EAAA,EAAA,IAAA,EAAM,QAAS,CAAA,GAAA,EAAK,QAAO,QAAS,EAAA,GAAA,EAAI,UAC3C,EAAA,EAAA,QAAA,CAAS,IACZ,CAAA,CAAA;AAAA,KAEJ;AAEA,IAAO,OAAA,IAAA,CAAK,UAAU,QAAQ,CAAA,CAAA;AAAA,GAChC,CAAA;AACF,CAAA,CAAA;AAEO,MAAM,mBAAmB,CAAC;AAAA,EAC/B,KAAA;AAAA,EACA,IAAA;AAAA,EACA,QAAW,GAAA,EAAA;AACb,CAA6B,KAAA;AAC3B,EAAM,MAAA,OAAA,GAAU,QAAuB,MAAM;AAC3C,IAAA,MAAM,IAAO,GAAA,IAAA,CAAK,MAAO,CAAA,CAAC,KAAK,GAAQ,KAAA;AACrC,MAAA,KAAA,MAAW,OAAO,GAAK,EAAA;AACrB,QAAA,GAAA,CAAI,IAAI,GAAG,CAAA,CAAA;AAAA,OACb;AACA,MAAO,OAAA,GAAA,CAAA;AAAA,KACT,kBAAO,IAAA,GAAA,EAAa,CAAA,CAAA;AAEpB,IAAA,OAAO,KAAM,CAAA,IAAA,CAAK,IAAI,CAAA,CAAE,IAAI,CAAQ,GAAA,MAAA;AAAA,MAClC,KAAO,EAAA,GAAA;AAAA,MACP,KAAO,EAAA,GAAA;AAAA,MACP,MAAA,EAAQ,aAAa,GAAG,CAAA;AAAA,KACxB,CAAA,CAAA,CAAA;AAAA,GACJ,EAAG,CAAC,IAAI,CAAC,CAAA,CAAA;AAET,EACE,uBAAA,KAAA,CAAA,aAAA;AAAA,IAAC,KAAA;AAAA,IAAA;AAAA,MACC,KAAA;AAAA,MACA,SAAS,EAAE,MAAA,EAAQ,IAAM,EAAA,MAAA,EAAQ,MAAM,QAAmB,EAAA;AAAA,MAC1D,OAAA;AAAA,MACA,IAAA;AAAA,KAAA;AAAA,GACF,CAAA;AAEJ;;;;"}