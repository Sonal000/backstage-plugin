{"version":3,"file":"tabularData.cjs.js","sources":["../../src/schema/tabularData.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2024 Dynatrace LLC\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { z } from 'zod';\r\n\r\nexport enum TableTypes {\r\n  LINK = 'link',\r\n  OBJECT = 'object',\r\n}\r\n\r\nconst tableCell = z\r\n  .string()\r\n  .or(z.null().or(z.boolean()).or(z.number()).transform(String))\r\n  .or(\r\n    z.strictObject({\r\n      type: z.literal(TableTypes.LINK),\r\n      text: z.string(),\r\n      url: z.string().url(),\r\n    }),\r\n  )\r\n  .or(\r\n    z\r\n      .array(z.any())\r\n      .or(z.object({}).passthrough())\r\n      .transform(obj => ({\r\n        type: TableTypes.OBJECT as const,\r\n        content: JSON.stringify(obj, null, 2),\r\n      })),\r\n  );\r\n\r\nconst rowData = z.record(tableCell);\r\nconst tabularDataSchema = z.array(rowData);\r\n\r\nexport const TabularDataFactory = {\r\n  fromString: (input: string): TabularData => {\r\n    const data = JSON.parse(input);\r\n    return TabularDataFactory.fromObject(data);\r\n  },\r\n\r\n  fromObject: (input: unknown) => {\r\n    return tabularDataSchema.parse(input);\r\n  },\r\n};\r\n\r\nexport type TabularData = z.infer<typeof tabularDataSchema>;\r\nexport type TabularDataRow = z.infer<typeof rowData>;\r\nexport type TabularDataCell = z.infer<typeof tableCell>;\r\n"],"names":["TableTypes","z"],"mappings":";;;;AAiBY,IAAA,UAAA,qBAAAA,WAAL,KAAA;AACL,EAAAA,YAAA,MAAO,CAAA,GAAA,MAAA,CAAA;AACP,EAAAA,YAAA,QAAS,CAAA,GAAA,QAAA,CAAA;AAFC,EAAAA,OAAAA,WAAAA,CAAAA;AAAA,CAAA,EAAA,UAAA,IAAA,EAAA,EAAA;AAKZ,MAAM,SAAA,GAAYC,MACf,MAAO,EAAA,CACP,GAAGA,KAAE,CAAA,IAAA,GAAO,EAAG,CAAAA,KAAA,CAAE,SAAS,CAAA,CAAE,GAAGA,KAAE,CAAA,MAAA,EAAQ,CAAE,CAAA,SAAA,CAAU,MAAM,CAAC,CAC5D,CAAA,EAAA;AAAA,EACCA,MAAE,YAAa,CAAA;AAAA,IACb,IAAA,EAAMA,KAAE,CAAA,OAAA,CAAQ,MAAe,YAAA;AAAA,IAC/B,IAAA,EAAMA,MAAE,MAAO,EAAA;AAAA,IACf,GAAK,EAAAA,KAAA,CAAE,MAAO,EAAA,CAAE,GAAI,EAAA;AAAA,GACrB,CAAA;AACH,CACC,CAAA,EAAA;AAAA,EACCA,MACG,KAAM,CAAAA,KAAA,CAAE,GAAI,EAAC,EACb,EAAG,CAAAA,KAAA,CAAE,MAAO,CAAA,EAAE,CAAE,CAAA,WAAA,EAAa,CAAA,CAC7B,UAAU,CAAQ,GAAA,MAAA;AAAA,IACjB,IAAM,EAAA,QAAA;AAAA,IACN,OAAS,EAAA,IAAA,CAAK,SAAU,CAAA,GAAA,EAAK,MAAM,CAAC,CAAA;AAAA,GACpC,CAAA,CAAA;AACN,CAAA,CAAA;AAEF,MAAM,OAAA,GAAUA,KAAE,CAAA,MAAA,CAAO,SAAS,CAAA,CAAA;AAClC,MAAM,iBAAA,GAAoBA,KAAE,CAAA,KAAA,CAAM,OAAO,CAAA,CAAA;AAElC,MAAM,kBAAqB,GAAA;AAAA,EAChC,UAAA,EAAY,CAAC,KAA+B,KAAA;AAC1C,IAAM,MAAA,IAAA,GAAO,IAAK,CAAA,KAAA,CAAM,KAAK,CAAA,CAAA;AAC7B,IAAO,OAAA,kBAAA,CAAmB,WAAW,IAAI,CAAA,CAAA;AAAA,GAC3C;AAAA,EAEA,UAAA,EAAY,CAAC,KAAmB,KAAA;AAC9B,IAAO,OAAA,iBAAA,CAAkB,MAAM,KAAK,CAAA,CAAA;AAAA,GACtC;AACF;;;;;"}