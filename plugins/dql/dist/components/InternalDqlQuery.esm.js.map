{"version":3,"file":"InternalDqlQuery.esm.js","sources":["../../src/components/InternalDqlQuery.tsx"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2024 Dynatrace LLC\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { useDqlQuery } from '../hooks';\r\nimport { DqlEmptyState } from './DqlEmptyState';\r\nimport { TabularDataTable } from './TabularDataTable';\r\nimport { EmptyStateProps } from './types';\r\nimport { stringifyEntityRef } from '@backstage/catalog-model';\r\nimport { Progress, ResponseErrorPanel } from '@backstage/core-components';\r\nimport { useEntity } from '@backstage/plugin-catalog-react';\r\nimport React from 'react';\r\n\r\nexport type InternalDqlQueryProps = {\r\n  title: string;\r\n  queryNamespace: string;\r\n  queryName: string;\r\n  EmptyState?: React.ComponentType<EmptyStateProps>;\r\n  pageSize?: number;\r\n};\r\n\r\nexport const InternalDqlQuery = ({\r\n  title,\r\n  queryNamespace,\r\n  queryName,\r\n  EmptyState = DqlEmptyState,\r\n  pageSize,\r\n}: InternalDqlQueryProps) => {\r\n  const { entity } = useEntity();\r\n  const componentName = entity.metadata.name;\r\n  const { error, loading, value } = useDqlQuery(\r\n    queryNamespace,\r\n    queryName,\r\n    stringifyEntityRef(entity),\r\n  );\r\n\r\n  if (loading) {\r\n    return <Progress />;\r\n  } else if (error) {\r\n    return <ResponseErrorPanel error={error} />;\r\n  }\r\n\r\n  if (!value || value.length === 0) {\r\n    return (\r\n      <EmptyState\r\n        componentName={componentName}\r\n        queryName={queryName}\r\n        queryNamespace={queryNamespace}\r\n        additionalInformation={\r\n          `${queryNamespace}.${queryName}` === 'dynatrace.srg-validations'\r\n            ? `# No Site Reliability Guardian resources\r\n  No result received. If you don't use Site Reliability Guardians, do not hesitate to integrate them. \r\n  [View this for more information.](https://docs.dynatrace.com/docs/platform-modules/automations/site-reliability-guardian)\r\n`\r\n            : ''\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return <TabularDataTable title={title} data={value} pageSize={pageSize} />;\r\n};\r\n"],"names":[],"mappings":";;;;;;;;AAgCO,MAAM,mBAAmB,CAAC;AAAA,EAC/B,KAAA;AAAA,EACA,cAAA;AAAA,EACA,SAAA;AAAA,EACA,UAAa,GAAA,aAAA;AAAA,EACb,QAAA;AACF,CAA6B,KAAA;AAC3B,EAAM,MAAA,EAAE,MAAO,EAAA,GAAI,SAAU,EAAA,CAAA;AAC7B,EAAM,MAAA,aAAA,GAAgB,OAAO,QAAS,CAAA,IAAA,CAAA;AACtC,EAAA,MAAM,EAAE,KAAA,EAAO,OAAS,EAAA,KAAA,EAAU,GAAA,WAAA;AAAA,IAChC,cAAA;AAAA,IACA,SAAA;AAAA,IACA,mBAAmB,MAAM,CAAA;AAAA,GAC3B,CAAA;AAEA,EAAA,IAAI,OAAS,EAAA;AACX,IAAA,2CAAQ,QAAS,EAAA,IAAA,CAAA,CAAA;AAAA,aACR,KAAO,EAAA;AAChB,IAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,sBAAmB,KAAc,EAAA,CAAA,CAAA;AAAA,GAC3C;AAEA,EAAA,IAAI,CAAC,KAAA,IAAS,KAAM,CAAA,MAAA,KAAW,CAAG,EAAA;AAChC,IACE,uBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,UAAA;AAAA,MAAA;AAAA,QACC,aAAA;AAAA,QACA,SAAA;AAAA,QACA,cAAA;AAAA,QACA,uBACE,CAAG,EAAA,cAAc,CAAI,CAAA,EAAA,SAAS,OAAO,2BACjC,GAAA,CAAA;AAAA;AAAA;AAAA,CAIA,GAAA,EAAA;AAAA,OAAA;AAAA,KAER,CAAA;AAAA,GAEJ;AAEA,EAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,EAAiB,KAAc,EAAA,IAAA,EAAM,OAAO,QAAoB,EAAA,CAAA,CAAA;AAC1E;;;;"}