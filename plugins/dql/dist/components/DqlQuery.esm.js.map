{"version":3,"file":"DqlQuery.esm.js","sources":["../../src/components/DqlQuery.tsx"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2024 Dynatrace LLC\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { InternalDqlQuery } from './InternalDqlQuery';\r\nimport { EmptyStateProps } from './types';\r\nimport { ErrorPanel } from '@backstage/core-components';\r\nimport React from 'react';\r\nimport { ZodError, z } from 'zod';\r\n\r\nconst namespaceSchema = z.enum(['dynatrace', 'custom']);\r\nconst queryNameSchema = z.string().regex(/^[a-z1-9\\-]+$/);\r\n\r\nconst dqlQueryPropsSchema = z.object({\r\n  title: z.string().default('Query Result'),\r\n  queryId: z\r\n    .string()\r\n    .toLowerCase()\r\n    .refine(\r\n      value => {\r\n        // Check the namespace and queryName separately\r\n        const [namespace, queryName] = value.split('.');\r\n        return (\r\n          namespaceSchema.safeParse(namespace).success &&\r\n          queryNameSchema.safeParse(queryName).success\r\n        );\r\n      },\r\n      {\r\n        message:\r\n          \"String must be in the format 'namespace.query-name'. Namespace must be 'dynatrace' or 'custom'. Query name may only contain alphanumerics and dashes.\",\r\n      },\r\n    ),\r\n});\r\n\r\nexport type DqlQueryProps = {\r\n  emptyState?: React.ComponentType<EmptyStateProps>;\r\n  pageSize?: number;\r\n} & z.infer<typeof dqlQueryPropsSchema>;\r\n\r\n/**\r\n * DqlQuery is a wrapper around InternalDqlQuery that provides error handling\r\n * for invalid props.\r\n * @param props DqlQueryProps\r\n * @returns React.ReactElement either a InternalDqlQuery or an ErrorPanel\r\n */\r\nexport const DqlQuery = (props: DqlQueryProps) => {\r\n  try {\r\n    const { title, queryId } = dqlQueryPropsSchema.parse(props);\r\n    const [queryNamespace, queryName] = queryId.split('.');\r\n    return (\r\n      <InternalDqlQuery\r\n        title={title}\r\n        queryNamespace={queryNamespace}\r\n        queryName={queryName}\r\n        EmptyState={props.emptyState}\r\n        pageSize={props.pageSize}\r\n      />\r\n    );\r\n  } catch (e) {\r\n    if (e instanceof ZodError) {\r\n      const title = `${e.issues[0].path.join('.')}: ${e.issues[0].message}`;\r\n      return <ErrorPanel error={e} title={title} />;\r\n    }\r\n    return <ErrorPanel error={new Error(`Unknown error: ${e}`)} />;\r\n  }\r\n};\r\n"],"names":[],"mappings":";;;;;AAqBA,MAAM,kBAAkB,CAAE,CAAA,IAAA,CAAK,CAAC,WAAA,EAAa,QAAQ,CAAC,CAAA,CAAA;AACtD,MAAM,eAAkB,GAAA,CAAA,CAAE,MAAO,EAAA,CAAE,MAAM,eAAe,CAAA,CAAA;AAExD,MAAM,mBAAA,GAAsB,EAAE,MAAO,CAAA;AAAA,EACnC,KAAO,EAAA,CAAA,CAAE,MAAO,EAAA,CAAE,QAAQ,cAAc,CAAA;AAAA,EACxC,OAAS,EAAA,CAAA,CACN,MAAO,EAAA,CACP,aACA,CAAA,MAAA;AAAA,IACC,CAAS,KAAA,KAAA;AAEP,MAAA,MAAM,CAAC,SAAW,EAAA,SAAS,CAAI,GAAA,KAAA,CAAM,MAAM,GAAG,CAAA,CAAA;AAC9C,MACE,OAAA,eAAA,CAAgB,UAAU,SAAS,CAAA,CAAE,WACrC,eAAgB,CAAA,SAAA,CAAU,SAAS,CAAE,CAAA,OAAA,CAAA;AAAA,KAEzC;AAAA,IACA;AAAA,MACE,OACE,EAAA,uJAAA;AAAA,KACJ;AAAA,GACF;AACJ,CAAC,CAAA,CAAA;AAaY,MAAA,QAAA,GAAW,CAAC,KAAyB,KAAA;AAChD,EAAI,IAAA;AACF,IAAA,MAAM,EAAE,KAAO,EAAA,OAAA,EAAY,GAAA,mBAAA,CAAoB,MAAM,KAAK,CAAA,CAAA;AAC1D,IAAA,MAAM,CAAC,cAAgB,EAAA,SAAS,CAAI,GAAA,OAAA,CAAQ,MAAM,GAAG,CAAA,CAAA;AACrD,IACE,uBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,gBAAA;AAAA,MAAA;AAAA,QACC,KAAA;AAAA,QACA,cAAA;AAAA,QACA,SAAA;AAAA,QACA,YAAY,KAAM,CAAA,UAAA;AAAA,QAClB,UAAU,KAAM,CAAA,QAAA;AAAA,OAAA;AAAA,KAClB,CAAA;AAAA,WAEK,CAAG,EAAA;AACV,IAAA,IAAI,aAAa,QAAU,EAAA;AACzB,MAAA,MAAM,KAAQ,GAAA,CAAA,EAAG,CAAE,CAAA,MAAA,CAAO,CAAC,CAAE,CAAA,IAAA,CAAK,IAAK,CAAA,GAAG,CAAC,CAAK,EAAA,EAAA,CAAA,CAAE,MAAO,CAAA,CAAC,EAAE,OAAO,CAAA,CAAA,CAAA;AACnE,MAAA,uBAAQ,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,EAAW,KAAO,EAAA,CAAA,EAAG,KAAc,EAAA,CAAA,CAAA;AAAA,KAC7C;AACA,IAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,cAAW,KAAO,EAAA,IAAI,MAAM,CAAkB,eAAA,EAAA,CAAC,EAAE,CAAG,EAAA,CAAA,CAAA;AAAA,GAC9D;AACF;;;;"}