{"version":3,"file":"InternalCatalogQueries.esm.js","sources":["../../src/components/InternalCatalogQueries.tsx"],"sourcesContent":["/**\r\n * @license\r\n * Copyright 2024 Dynatrace LLC\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nimport { useCatalogDqlQueries } from '../hooks/useCatalogDqlQueries';\r\nimport { DqlEmptyState } from './DqlEmptyState';\r\nimport { TabularDataTable } from './TabularDataTable';\r\nimport { EmptyStateProps } from './types';\r\nimport { stringifyEntityRef } from '@backstage/catalog-model';\r\nimport { Progress, ResponseErrorPanel } from '@backstage/core-components';\r\nimport { useEntity } from '@backstage/plugin-catalog-react';\r\nimport React from 'react';\r\n\r\nexport type InternalCatalogQueriesProps = {\r\n  queryNamespace: string;\r\n  EmptyState?: React.ComponentType<EmptyStateProps>;\r\n  pageSize?: number;\r\n};\r\n\r\nexport const InternalCatalogQueries = ({\r\n  queryNamespace,\r\n  EmptyState = DqlEmptyState,\r\n  pageSize,\r\n}: InternalCatalogQueriesProps) => {\r\n  const { entity } = useEntity();\r\n  const componentName = entity.metadata.name;\r\n\r\n  const { error, loading, value } = useCatalogDqlQueries(\r\n    queryNamespace,\r\n    stringifyEntityRef(entity),\r\n  );\r\n\r\n  if (loading) {\r\n    return <Progress />;\r\n  } else if (error) {\r\n    return <ResponseErrorPanel error={error} />;\r\n  }\r\n\r\n  if (!value || value.length === 0) {\r\n    return (\r\n      <EmptyState\r\n        componentName={componentName}\r\n        queryName={''}\r\n        queryNamespace={queryNamespace}\r\n        additionalInformation=\"Please ensure that you have correctly defined queries in the catalog-info.yaml file.\"\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {value.map((queryData, index) =>\r\n        queryData.data?.length > 0 ? (\r\n          <TabularDataTable\r\n            key={index}\r\n            data={queryData.data}\r\n            title={queryData.title}\r\n            pageSize={pageSize}\r\n          ></TabularDataTable>\r\n        ) : (\r\n          <EmptyState\r\n            key={index}\r\n            componentName={componentName}\r\n            queryName={queryData.title}\r\n            queryNamespace={queryNamespace}\r\n          />\r\n        ),\r\n      )}\r\n    </>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;;;;AA8BO,MAAM,yBAAyB,CAAC;AAAA,EACrC,cAAA;AAAA,EACA,UAAa,GAAA,aAAA;AAAA,EACb,QAAA;AACF,CAAmC,KAAA;AACjC,EAAM,MAAA,EAAE,MAAO,EAAA,GAAI,SAAU,EAAA,CAAA;AAC7B,EAAM,MAAA,aAAA,GAAgB,OAAO,QAAS,CAAA,IAAA,CAAA;AAEtC,EAAA,MAAM,EAAE,KAAA,EAAO,OAAS,EAAA,KAAA,EAAU,GAAA,oBAAA;AAAA,IAChC,cAAA;AAAA,IACA,mBAAmB,MAAM,CAAA;AAAA,GAC3B,CAAA;AAEA,EAAA,IAAI,OAAS,EAAA;AACX,IAAA,2CAAQ,QAAS,EAAA,IAAA,CAAA,CAAA;AAAA,aACR,KAAO,EAAA;AAChB,IAAO,uBAAA,KAAA,CAAA,aAAA,CAAC,sBAAmB,KAAc,EAAA,CAAA,CAAA;AAAA,GAC3C;AAEA,EAAA,IAAI,CAAC,KAAA,IAAS,KAAM,CAAA,MAAA,KAAW,CAAG,EAAA;AAChC,IACE,uBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,UAAA;AAAA,MAAA;AAAA,QACC,aAAA;AAAA,QACA,SAAW,EAAA,EAAA;AAAA,QACX,cAAA;AAAA,QACA,qBAAsB,EAAA,sFAAA;AAAA,OAAA;AAAA,KACxB,CAAA;AAAA,GAEJ;AAEA,EAAA,iEAEK,KAAM,CAAA,GAAA;AAAA,IAAI,CAAC,SAAW,EAAA,KAAA,KACrB,SAAU,CAAA,IAAA,EAAM,SAAS,CACvB,mBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,gBAAA;AAAA,MAAA;AAAA,QACC,GAAK,EAAA,KAAA;AAAA,QACL,MAAM,SAAU,CAAA,IAAA;AAAA,QAChB,OAAO,SAAU,CAAA,KAAA;AAAA,QACjB,QAAA;AAAA,OAAA;AAAA,KAGF,mBAAA,KAAA,CAAA,aAAA;AAAA,MAAC,UAAA;AAAA,MAAA;AAAA,QACC,GAAK,EAAA,KAAA;AAAA,QACL,aAAA;AAAA,QACA,WAAW,SAAU,CAAA,KAAA;AAAA,QACrB,cAAA;AAAA,OAAA;AAAA,KACF;AAAA,GAGN,CAAA,CAAA;AAEJ;;;;"}